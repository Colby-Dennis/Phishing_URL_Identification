return(df)
}
replace_distribution <- function(df) {
i <- 2
while (i <= (ncol(df)-1)) {
j <- 1
uniq1 <- c(0,-1, 1)
cnt <- tabulate(df[,i], uniq1)
prop <- cnt[2] / cnt[3]
nmbr<-ifelse(runif(1)<=prop,-1,1)
while (j<= nrow(df[i])) {
if (is.na(df[[i]][j])) {
df[[i]][j] <- nmbr
}
j <- j + 1
}
i <- i + 1
}
return(df)
}
# Function that replaces the unknown with the most often
replace_mode <- function(df) {
i <- 2
while (i <= (ncol(df)-1)) {
j <- 1
value_matrix <- matrix(table(df[,i]))
value <- -1
if (nrow(value_matrix) == 3) {
if (value_matrix[1] > value_matrix[2] && value_matrix[1] > value_matrix[3]) {
value <- -1
} else if (value_matrix[2] > value_matrix[3]) {
value <- 0
} else {
value <- 1
}
} else {
if (value_matrix[1] > value_matrix[2]) {
value <- -1
} else {
value <- 1
}
}
while (j<= nrow(df[i])) {
if (is.na(df[[i]][j])) {
df[[i]][j] <- value
}
j <- j + 1
}
i <- i + 1
}
return(df)
}
#Randomly generates either a -1,0,1
set0<-c(-1,0,1)
replace_random_withzero <- function(df) {
i <- 2
while (i <= (ncol(df)-1)) {
j <- 1
while (j<= nrow(df[i])) {
if (is.na(df[[i]][j])) {
value<-sample(set0,1)
df[[i]][j] <- value
}
j <- j + 1
}
i <- i + 1
}
return(df)
}
# Using a low ranking value to determine what 1 and -1 represents.
hist(mysmalldata$having_At_Symbol, main="Having @ symbol")
# Getting datasets
small_cleaned_results <- clean_results(mysmalldata)
# Partition Data
partitioned_small <- createDataPartition(y = mysmalldata$Result, p= 0.7, list = FALSE)
raw_cleaned_results <- clean_results(myrawdata)
set.seed(700)
# Getting datasets
small_cleaned_results <- clean_results(mysmalldata)
raw_cleaned_results <- clean_results(myrawdata)
# Partition Data
partitioned_small <- createDataPartition(y = small_cleaned_results$Result, p= 0.7, list = FALSE)
mysmalldata_train <- small_cleaned_results[partitioned_small,]
mysmalldata_test <- small_cleaned_results[-partitioned_small,]
partitioned_raw <- createDataPartition(y = raw_cleaned_results$Result, p= 0.7, list = FALSE)
myrawdata_train <- raw_cleaned_results[partitioned_raw]
myrawdata_test <- raw_cleaned_results[-partitioned_raw,]
# Check Partition
#two-sample z-test on small data (mysmalldata_test , mysmalldata_train)
p1 <- sum(mysmalldata_train$Result=="-1")/nrow(mysmalldata_train)
p2 <- sum(mysmalldata_test$Result=="-1")/nrow(mysmalldata_test)
p_pooled <- (sum(mysmalldata_train$Result=="-1") +
sum(mysmalldata_test$Result=="-1"))/
(nrow(mysmalldata_train) + nrow(mysmalldata_test))
z <- (p1 - p2)/sqrt(p_pooled*(1-p_pooled) *
(1/nrow(mysmalldata_train) + 1/nrow(mysmalldata_test)))
z.p <- 2*pnorm(-abs(z))
#two-sample z-test on raw data (myrawdata_test, myrawdata_train)
p1 <- sum(myrawdata_train$Result=="-1")/nrow(myrawdata_train)
myrawdata_train <- raw_cleaned_results[partitioned_raw]
myrawdata_train <- raw_cleaned_results[partitioned_raw,]
#two-sample z-test on raw data (myrawdata_test, myrawdata_train)
p1 <- sum(myrawdata_train$Result=="-1")/nrow(myrawdata_train)
p2 <- sum(myrawdata_test$Result=="-1")/nrow(myrawdata_test)
p_pooled <- (sum(myrawdata_train$Result=="-1") +
sum(myrawdata_test$Result=="-1"))/
(nrow(myrawdata_train) + nrow(myrawdata_test))
z <- (p1 - p2)/sqrt(p_pooled*(1-p_pooled) *
(1/nrow(myrawdata_train) + 1/nrow(myrawdata_test)))
z.p <- 2*pnorm(-abs(z))
# Simple Perception
mysmalldata_train_zeros <- replace_zero(mysmalldata_train)
simp_perc_small_zeros<-neuralnet(Results~having_IP_address+URL_Length+Shortining_Service+having_At_Symbol+
double_slash_redirecting+Prefix_Suffix+having_Sub_Domain+SSLfinal_State+
Domain_registration_length+Favicon+Port+HTTPS_token+Request_URL+
URL_of_Anchor+Links_in_tags+SFH+Submitting_to_email+Abnormal_URL+
Redirect+on_mouseover+RightClick+popUpWindow+Iframe+age_of_domain+
DNSRecord+web_traffic+Page_Rank+Google_Index+Links_pointing_to_page+
Statistical_report, mysmalldata_train_zeros,hidden=c(1,1))
simp_perc_small_zeros<-neuralnet(Result~having_IP_address+URL_Length+Shortining_Service+having_At_Symbol+
double_slash_redirecting+Prefix_Suffix+having_Sub_Domain+SSLfinal_State+
Domain_registration_length+Favicon+Port+HTTPS_token+Request_URL+
URL_of_Anchor+Links_in_tags+SFH+Submitting_to_email+Abnormal_URL+
Redirect+on_mouseover+RightClick+popUpWindow+Iframe+age_of_domain+
DNSRecord+web_traffic+Page_Rank+Google_Index+Links_pointing_to_page+
Statistical_report, mysmalldata_train_zeros,hidden=c(1,1))
plot(simp_perc_small_zeros)
simp_perc_small_zeros_model<-predict(simp_perc_small_zeros,newdata = mysmalldata_test_zeros)
mysmalldata_test_zeros <- replace_zero(mysmalldata_test)
simp_perc_small_zeros_model<-predict(simp_perc_small_zeros,newdata = mysmalldata_test_zeros)
confusionMatrix(test_pred, mysmalldata_test_zeros$Result)
confusionMatrix(simp_perc_small_zeros_model, mysmalldata_test_zeros$Result)
confusionMatrix(factor(simp_perc_small_zeros_model), factor(mysmalldata_test_zeros$Result))
confusionMatrix(simp_perc_small_zeros_model, mysmalldata_test_zeros$Result)
?confusionMatrix
confusionMatrix <- table(mysmalldata_test_zeros$Result, simp_perc_small_zeros_model)
print(confusionMatrix)
simp_perc_small_zeros_conf <- confusionMatrix(simp_perc_small_zeros_model, mysmalldata_test_zeros$Result)
simp_perc_small_zeros_model[,1]
simp_perc_small_zeros_conf <- confusionMatrix(simp_perc_small_zeros_model[,1], mysmalldata_test_zeros$Result)
factor(simp_perc_small_zeros_model)
simp_perc_small_zeros_conf <- confusionMatrix(factor(simp_perc_small_zeros_model), mysmalldata_test_zeros$Result)
class(mysmalldata_test_zeros$Result)
class(simp_perc_small_zeros_model)
class(simp_perc_small_zeros_model[,1])
simp_perc_small_zeros_conf <- confusionMatrix(factor(simp_perc_small_zeros_model), factor(mysmalldata_test_zeros$Result))
simp_perc_small_zeros_conf <- confusionMatrix(factor(simp_perc_small_zeros_model[,1]), factor(mysmalldata_test_zeros$Result))
simp_perc_small_zeros_conf <- confusionMatrix(simp_perc_small_zeros_model)
simp_perc_small_zeros_conf <- confusionMatrix(simp_perc_small_zeros_model, mysmalldata_text_zeros)
simp_perc_small_zeros_conf <- confusionMatrix(simp_perc_small_zeros_model, mysmalldata_test_zeros)
simp_perc_small_zeros_conf <- confusionMatrix(simp_perc_small_zeros_model, mysmalldata_test_zeros$Result)
simp_perc_small_zeros_conf <- confusionMatrix(simp_perc_small_zeros_model, factor(mysmalldata_test_zeros$Result))
summary(mysmalldata_test_zeros$Result)
ncol(mysmalldata_test_zeros$Result)
nrow(mysmalldata_test_zeros$Result)
mysmalldata_test_zeros$Result
class(mysmalldata_test_zeros$Result)
class(factor(mysmalldata_test_zeros$Result))
factor(mysmalldata_test_zeros$Result)
class(simp_perc_small_zeros_model)
simp_perc_small_zeros_conf <- confusionMatrix(table(simp_perc_small_zeros_model), factor(mysmalldata_test_zeros$Result))
simp_perc_small_zeros_model
simp_perc_small_zeros_result <- simp_perc_small_zeros_model[,2]
View(simp_perc_small_zeros_model)
simp_perc_small_zeros_result>=0 <- 1
simp_perc_small_zeros_result[,1] >=0 <- 1
View(simp_perc_small_zeros_model)
simp_perc_small_zeros_model[,1]
simp_perc_small_zeros_model[1]
simp_perc_small_zeros_model[3]
integer(3)
vec(0,0,0)
c(0,0,0)
nrow(simp_perc_small_zeros_model)
simp_perc_small_zeros_result <- integer(nrow(simp_perc_small_zeros_model))
# A function to covert predictions to binary result
get_prediction <- function(mod) {
result_vec <- integer(nrow(mod))
i <- 1
while (i <= nrow(mod)) {
if (mod[i] >= 0) {
result_vec[i] <- 1
} else {
result_vec[i] <- -1
}
i <- i + 1
}
}
# A function to covert predictions to binary result
get_prediction <- function(mod) {
result_vec <- integer(nrow(mod))
i <- 1
while (i <= nrow(mod)) {
if (mod[i] >= 0) {
result_vec[i] <- 1
} else {
result_vec[i] <- -1
}
i <- i + 1
}
return(result_vec)
}
simp_perc_small_zeros_result <- get_prediction(simp_perc_small_zeros_model)
simp_perc_small_zeros_conf <- confusionMatrix(simp_perc_small_zeros_result, mysmalldata_train_zeros$Result)
factor(simp_perc_small_zeros_result)
factor(mysmalldata_train_zeros$Result)
simp_perc_small_zeros_conf <- confusionMatrix(factor(simp_perc_small_zeros_result), factor(mysmalldata_test_zeros$Result))
print(simp_perc_small_zeros_conf)
# Simple Perception
mysmalldata_train_zeros <- replace_zero(mysmalldata_train)
mysmalldata_test_zeros <- replace_zero(mysmalldata_test)
simp_perc_small_zeros<-neuralnet(Result~having_IP_address+URL_Length+Shortining_Service+having_At_Symbol+
double_slash_redirecting+Prefix_Suffix+having_Sub_Domain+SSLfinal_State+
Domain_registration_length+Favicon+Port+HTTPS_token+Request_URL+
URL_of_Anchor+Links_in_tags+SFH+Submitting_to_email+Abnormal_URL+
Redirect+on_mouseover+RightClick+popUpWindow+Iframe+age_of_domain+
DNSRecord+web_traffic+Page_Rank+Google_Index+Links_pointing_to_page+
Statistical_report, mysmalldata_train_zeros,hidden=c(1))
plot(simp_perc_small_zeros)
simp_perc_small_zeros_model<-predict(simp_perc_small_zeros,newdata = mysmalldata_test_zeros)
simp_perc_small_zeros_result <- get_prediction(simp_perc_small_zeros_model)
simp_perc_small_zeros_conf <- confusionMatrix(factor(simp_perc_small_zeros_result), factor(mysmalldata_test_zeros$Result))
print(simp_perc_small_zeros_conf)
simp_perc_small_zeros_model
print(simp_perc_small_zeros_conf)
plot(simp_perc_small_zeros)
simp_perc_small_zeros_332<-neuralnet(Result~having_IP_address+URL_Length+Shortining_Service+having_At_Symbol+
double_slash_redirecting+Prefix_Suffix+having_Sub_Domain+SSLfinal_State+
Domain_registration_length+Favicon+Port+HTTPS_token+Request_URL+
URL_of_Anchor+Links_in_tags+SFH+Submitting_to_email+Abnormal_URL+
Redirect+on_mouseover+RightClick+popUpWindow+Iframe+age_of_domain+
DNSRecord+web_traffic+Page_Rank+Google_Index+Links_pointing_to_page+
Statistical_report, mysmalldata_train_zeros,hidden=c(3,3,2))
simp_perc_small_zeros_332<-neuralnet(Result~having_IP_address+URL_Length+Shortining_Service+having_At_Symbol+
double_slash_redirecting+Prefix_Suffix+having_Sub_Domain+SSLfinal_State+
Domain_registration_length+Favicon+Port+HTTPS_token+Request_URL+
URL_of_Anchor+Links_in_tags+SFH+Submitting_to_email+Abnormal_URL+
Redirect+on_mouseover+RightClick+popUpWindow+Iframe+age_of_domain+
DNSRecord+web_traffic+Page_Rank+Google_Index+Links_pointing_to_page+
Statistical_report, mysmalldata_train_zeros,hidden=c(3,3,2), act.fct="tanh")
#replace with Zeros
mysmalldata_train <- replace_zero(mysmalldata_train)
mysmalldata_test <- replace_zero(mysmalldata_test)
myrawdata_train <- replace_zero(myrawdata_train)
myrawdata_test <- replace_zero(myrawdata_test)
# Simple Perception
simp_perc_small<-neuralnet(Result~having_IP_address+URL_Length+Shortining_Service+having_At_Symbol+
double_slash_redirecting+Prefix_Suffix+having_Sub_Domain+SSLfinal_State+
Domain_registration_length+Favicon+Port+HTTPS_token+Request_URL+
URL_of_Anchor+Links_in_tags+SFH+Submitting_to_email+Abnormal_URL+
Redirect+on_mouseover+RightClick+popUpWindow+Iframe+age_of_domain+
DNSRecord+web_traffic+Page_Rank+Google_Index+Links_pointing_to_page+
Statistical_report, mysmalldata_train,hidden=c(1))
plot(simp_perc_small, main="Simple Perceptron w/ NA's replaced with zeros")
plot(simp_perc_small, main="Simple Perceptron w/ NA's replaced with zeros")
simp_perc_small_model<-predict(simp_perc_small,newdata = mysmalldata_test)
simp_perc_small_result <- get_prediction(simp_perc_small_model)
simp_perc_small_conf <- confusionMatrix(factor(simp_perc_small_result), factor(mysmalldata_test$Result), mode="everything")
print(simp_perc_small_conf)
plot(simp_perc_small, main="Simple Perceptron w/ NA's replaced with zeros")
#replace with Zeros
# mysmalldata_train <- replace_zero(mysmalldata_train)
# mysmalldata_test <- replace_zero(mysmalldata_test)
# myrawdata_train <- replace_zero(myrawdata_train)
# myrawdata_test <- replace_zero(myrawdata_test)
# #replace with random -1 or 1
mysmalldata_train <- replace_random_withzero(mysmalldata_train)
mysmalldata_test <- replace_random_withzero(mysmalldata_test)
myrawdata_train <- replace_random_withzero(myrawdata_train)
myrawdata_test <- replace_random_withzero(myrawdata_test)
# Simple Perception
simp_perc_small<-neuralnet(Result~having_IP_address+URL_Length+Shortining_Service+having_At_Symbol+
double_slash_redirecting+Prefix_Suffix+having_Sub_Domain+SSLfinal_State+
Domain_registration_length+Favicon+Port+HTTPS_token+Request_URL+
URL_of_Anchor+Links_in_tags+SFH+Submitting_to_email+Abnormal_URL+
Redirect+on_mouseover+RightClick+popUpWindow+Iframe+age_of_domain+
DNSRecord+web_traffic+Page_Rank+Google_Index+Links_pointing_to_page+
Statistical_report, mysmalldata_train,hidden=c(1))
plot(simp_perc_small, main="Simple Perceptron w/ NA's replaced with zeros")
simp_perc_small_model<-predict(simp_perc_small,newdata = mysmalldata_test)
simp_perc_small_result <- get_prediction(simp_perc_small_model)
simp_perc_small_conf <- confusionMatrix(factor(simp_perc_small_result), factor(mysmalldata_test$Result), mode="everything")
print(simp_perc_small_conf)
# Required Packages
# install.packages("ggplot2")
# install.packages("gridExtra")
# install.packages("neuralnet")
# install.packages("caret")
library(ggplot2)
library(gridExtra)
library(neuralnet)
library(caret)
#Loading in the data
mysmalldata <- read.csv("rawDataSetSmall.csv")
myrawdata <- read.csv("rawDataSet.csv", stringsAsFactors = F)
# Renaming data according to provided paper.
data_names <- c("id","having_IP_address","URL_Length","Shortining_Service","having_At_Symbol",
"double_slash_redirecting","Prefix_Suffix","having_Sub_Domain","SSLfinal_State",
"Domain_registration_length","Favicon","Port","HTTPS_token","Request_URL",
"URL_of_Anchor","Links_in_tags","SFH","Submitting_to_email","Abnormal_URL",
"Redirect","on_mouseover","RightClick","popUpWindow","Iframe","age_of_domain",
"DNSRecord","web_traffic","Page_Rank","Google_Index","Links_pointing_to_page",
"Statistical_report","Result")
names(mysmalldata) <- data_names
names(myrawdata) <- data_names
# Function that removes all non-existance result rows
clean_results <- function(df) {
does_exist <- c() # Initialize with information
i <- 1
while (i <= (nrow(df))) {
if (is.na(df[i,ncol(df)])) {
does_exist[i] <- F
} else {
does_exist[i] <- T
}
i <- i + 1
}
return(df[does_exist,])
}
# Function that replaces all NA's with zeros
replace_zero <- function(df) {
i <- 2
while (i <= (ncol(df)-1)) {
j <- 1
while (j<= nrow(df[i])) {
if (is.na(df[[i]][j])) {
df[[i]][j] <- 0
}
j <- j + 1
}
i <- i + 1
}
return(df)
}
# Function that replaces the unknown with an average.
replace_average <- function(df) {
i <- 2
while (i <= (ncol(df)-1)) {
j <- 1
average = mean(df[,i], na.rm=T)
while (j<= nrow(df[i])) {
if (is.na(df[[i]][j])) {
df[[i]][j] <- average
}
j <- j + 1
}
i <- i + 1
}
return(df)
}
replace_distribution <- function(df) {
i <- 2
while (i <= (ncol(df)-1)) {
j <- 1
uniq1 <- c(0,-1, 1)
cnt <- tabulate(df[,i], uniq1)
prop <- cnt[2] / cnt[3]
nmbr<-ifelse(runif(1)<=prop,-1,1)
while (j<= nrow(df[i])) {
if (is.na(df[[i]][j])) {
df[[i]][j] <- nmbr
}
j <- j + 1
}
i <- i + 1
}
return(df)
}
# Function that replaces the unknown with the most often
replace_mode <- function(df) {
i <- 2
while (i <= (ncol(df)-1)) {
j <- 1
value_matrix <- matrix(table(df[,i]))
value <- -1
if (nrow(value_matrix) == 3) {
if (value_matrix[1] > value_matrix[2] && value_matrix[1] > value_matrix[3]) {
value <- -1
} else if (value_matrix[2] > value_matrix[3]) {
value <- 0
} else {
value <- 1
}
} else {
if (value_matrix[1] > value_matrix[2]) {
value <- -1
} else {
value <- 1
}
}
while (j<= nrow(df[i])) {
if (is.na(df[[i]][j])) {
df[[i]][j] <- value
}
j <- j + 1
}
i <- i + 1
}
return(df)
}
#Randomly generates either a -1,0,1
set0<-c(-1,0,1)
replace_random_withzero <- function(df) {
i <- 2
while (i <= (ncol(df)-1)) {
j <- 1
while (j<= nrow(df[i])) {
if (is.na(df[[i]][j])) {
value<-sample(set0,1)
df[[i]][j] <- value
}
j <- j + 1
}
i <- i + 1
}
return(df)
}
# A function to covert predictions to binary result
get_prediction <- function(mod) {
result_vec <- integer(nrow(mod))
i <- 1
while (i <= nrow(mod)) {
if (mod[i] >= 0) {
result_vec[i] <- 1
} else {
result_vec[i] <- -1
}
i <- i + 1
}
return(result_vec)
}
set.seed(700)
# Getting datasets
small_cleaned_results <- clean_results(mysmalldata)
raw_cleaned_results <- clean_results(myrawdata)
# Partition Data
partitioned_small <- createDataPartition(y = small_cleaned_results$Result, p= 0.7, list = FALSE)
mysmalldata_train <- small_cleaned_results[partitioned_small,]
mysmalldata_test <- small_cleaned_results[-partitioned_small,]
partitioned_raw <- createDataPartition(y = raw_cleaned_results$Result, p= 0.7, list = FALSE)
myrawdata_train <- raw_cleaned_results[partitioned_raw,]
myrawdata_test <- raw_cleaned_results[-partitioned_raw,]
# Check Partition
#two-sample z-test on small data (mysmalldata_test , mysmalldata_train)
p1 <- sum(mysmalldata_train$Result=="-1")/nrow(mysmalldata_train)
p2 <- sum(mysmalldata_test$Result=="-1")/nrow(mysmalldata_test)
p_pooled <- (sum(mysmalldata_train$Result=="-1") +
sum(mysmalldata_test$Result=="-1"))/
(nrow(mysmalldata_train) + nrow(mysmalldata_test))
z <- (p1 - p2)/sqrt(p_pooled*(1-p_pooled) *
(1/nrow(mysmalldata_train) + 1/nrow(mysmalldata_test)))
z.p <- 2*pnorm(-abs(z))
#two-sample z-test on raw data (myrawdata_test, myrawdata_train)
p1 <- sum(myrawdata_train$Result=="-1")/nrow(myrawdata_train)
p2 <- sum(myrawdata_test$Result=="-1")/nrow(myrawdata_test)
p_pooled <- (sum(myrawdata_train$Result=="-1") +
sum(myrawdata_test$Result=="-1"))/
(nrow(myrawdata_train) + nrow(myrawdata_test))
z <- (p1 - p2)/sqrt(p_pooled*(1-p_pooled) *
(1/nrow(myrawdata_train) + 1/nrow(myrawdata_test)))
z.p <- 2*pnorm(-abs(z))
#replace with Zeros
# mysmalldata_train <- replace_zero(mysmalldata_train)
# mysmalldata_test <- replace_zero(mysmalldata_test)
# myrawdata_train <- replace_zero(myrawdata_train)
# myrawdata_test <- replace_zero(myrawdata_test)
# #replace with random -1 or 1
mysmalldata_train <- replace_random_withzero(mysmalldata_train)
mysmalldata_test <- replace_random_withzero(mysmalldata_test)
myrawdata_train <- replace_random_withzero(myrawdata_train)
myrawdata_test <- replace_random_withzero(myrawdata_test)
# Simple Perception
simp_perc_small<-neuralnet(Result~having_IP_address+URL_Length+Shortining_Service+having_At_Symbol+
double_slash_redirecting+Prefix_Suffix+having_Sub_Domain+SSLfinal_State+
Domain_registration_length+Favicon+Port+HTTPS_token+Request_URL+
URL_of_Anchor+Links_in_tags+SFH+Submitting_to_email+Abnormal_URL+
Redirect+on_mouseover+RightClick+popUpWindow+Iframe+age_of_domain+
DNSRecord+web_traffic+Page_Rank+Google_Index+Links_pointing_to_page+
Statistical_report, mysmalldata_train,hidden=c(1))
plot(simp_perc_small, main="Simple Perceptron w/ NA's replaced with zeros")
simp_perc_small_model<-predict(simp_perc_small,newdata = mysmalldata_test)
simp_perc_small_result <- get_prediction(simp_perc_small_model)
simp_perc_small_conf <- confusionMatrix(factor(simp_perc_small_result), factor(mysmalldata_test$Result), mode="everything")
print(simp_perc_small_conf)
# mysmalldata_train <- replace_zero(mysmalldata_train)
# mysmalldata_test <- replace_zero(mysmalldata_test)
# myrawdata_train <- replace_zero(myrawdata_train)
# myrawdata_test <- replace_zero(myrawdata_test)
# #replace with random -1 or 1
# mysmalldata_train <- replace_random_withzero(mysmalldata_train)
# mysmalldata_test <- replace_random_withzero(mysmalldata_test)
# myrawdata_train <- replace_random_withzero(myrawdata_train)
# myrawdata_test <- replace_random_withzero(myrawdata_test)
# #replace with mode
mysmalldata_train <- replace_mode(mysmalldata_train)
mysmalldata_test <- replace_mode(mysmalldata_test)
myrawdata_train <- replace_mode(myrawdata_train)
myrawdata_test <- replace_mode(myrawdata_test)
# Simple Perception
simp_perc_small<-neuralnet(Result~having_IP_address+URL_Length+Shortining_Service+having_At_Symbol+
double_slash_redirecting+Prefix_Suffix+having_Sub_Domain+SSLfinal_State+
Domain_registration_length+Favicon+Port+HTTPS_token+Request_URL+
URL_of_Anchor+Links_in_tags+SFH+Submitting_to_email+Abnormal_URL+
Redirect+on_mouseover+RightClick+popUpWindow+Iframe+age_of_domain+
DNSRecord+web_traffic+Page_Rank+Google_Index+Links_pointing_to_page+
Statistical_report, mysmalldata_train,hidden=c(1))
plot(simp_perc_small, main="Simple Perceptron w/ NA's replaced with zeros")
simp_perc_small_model<-predict(simp_perc_small,newdata = mysmalldata_test)
simp_perc_small_result <- get_prediction(simp_perc_small_model)
simp_perc_small_conf <- confusionMatrix(factor(simp_perc_small_result), factor(mysmalldata_test$Result), mode="everything")
print(simp_perc_small_conf)
plot(simp_perc_small, main="Simple Perceptron w/ NA's replaced with zeros")
